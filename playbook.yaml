---
- name: Ansible playbook
  hosts: localhost
  become: yes
  tasks:
    - name: Install OpenSSH package
      pacman:
        name: openssh
        state: present
      register: ssh_install
    - name: Log OpenSSH installation status
      debug:
        msg: "OpenSSH package installed: {{ ssh_install.changed }}"

    - name: Enable SSH service to start on boot
      systemd:
        name: sshd
        enabled: yes
        state: started
      register: ssh_enable
    - name: Log SSH service enable status
      debug:
        msg: "SSH service enabled and started: {{ ssh_enable.changed }}"

    - name: Install fonts
      pacman:
        name: ttf-meslo-nerd
        state: present
      register: font_install
    - name: Log font installation status
      debug:
        msg: "Fonts installed: {{ font_install.changed }}"

    - name: Install essential dependencies using yay
      become: no
      command: yay -Sy --noconfirm fastfetch feh fzf i3 kitty maim neovim picom polybar rofi tmux xorg-xrdb xclip zsh zsh-theme-powerlevel10k-git
      register: yay_dependencies
    - name: Log essential dependencies installation status
      debug:
        msg: "Essential dependencies installed: {{ yay_dependencies.changed }}"

    - name: Install xrdp and xorgxrdp using yay
      become: no
      command: yay -S --noconfirm xrdp xorgxrdp
      register: xrdp_install
    - name: Log xrdp installation status
      debug:
        msg: "XRDP and xorgxrdp installed: {{ xrdp_install.changed }}"

    - name: Install Qt and GTK dependencies using yay
      become: no
      command: yay -Sy --noconfirm qt6-base qt5-base gtk4 gtk3 gnome-themes-extra adwaita-qt5-git adwaita-qt6-git
      register: qt_gtk_install
    - name: Log Qt and GTK installation status
      debug:
        msg: "Qt and GTK dependencies installed: {{ qt_gtk_install.changed }}"

    - name: Install Pipewire module for XRDP
      become: no
      command: yay -S --noconfirm pipewire-module-xrdp
      register: pipewire_xrdp_install
    - name: Log Pipewire module installation status
      debug:
        msg: "Pipewire module for XRDP installed: {{ pipewire_xrdp_install.changed }}"

    - name: Install Mesa, Vulkan, and libva drivers using pacman
      pacman:
        name:
          - mesa
          - vulkan-radeon
          - libva-mesa-driver
          - libva-utils
        state: present
      register: mesa_vulkan_install
    - name: Log Mesa and Vulkan installation status
      debug:
        msg: "Mesa, Vulkan, and libva drivers installed: {{ mesa_vulkan_install.changed }}"

    - name: Install Xorg packages using pacman
      pacman:
        name:
          - xorg
          - xorg-server
          - xorg-xinit
        state: present
      register: xorg_install
    - name: Log Xorg installation status
      debug:
        msg: "Xorg packages installed: {{ xorg_install.changed }}"

    - name: Enable xrdp service to start on boot
      systemd:
        name: xrdp
        enabled: yes
        state: started
      register: xrdp_enable
    - name: Log xrdp service enable status
      debug:
        msg: "xrdp service enabled and started: {{ xrdp_enable.changed }}"

    - name: Ensure the tmux plugins directory exists with proper permissions
      become: yes
      file:
        path: "{{ ansible_env.HOME }}/.tmux/plugins"
        state: directory
        mode: '0755'
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"

    - name: Install tmux plugin manager (TPM) using shell with if check
      become: no
      shell: |
        if [ ! -d "~/.tmux/plugins/tpm" ]; then
          git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
        fi
      register: tmux_plugin_manager
    - name: Log tmux plugin manager installation status
      debug:
        msg: "Tmux plugin manager installed: {{ tmux_plugin_manager.changed }}"

    - name: Install Oh My Zsh using shell if .oh-my-zsh does not exist
      become: no
      shell: >
        if [ ! -d "{{ ansible_env.HOME }}/.oh-my-zsh" ]; then
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
        fi
      args:
        creates: "~/.oh-my-zsh"
      register: ohmyzsh_install


    - name: Install zsh-autosuggestions plugin using shell with if check
      shell: |
        if [ ! -d "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions" ]; then
          git clone https://github.com/zsh-users/zsh-autosuggestions "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        fi
      register: zsh_autosuggestions

    - name: Log zsh-autosuggestions installation status
      debug:
        msg: "zsh-autosuggestions plugin installed: {{ zsh_autosuggestions.changed }}"

    - name: Install zsh-completions plugin using shell with if check
      shell: |
        if [ ! -d "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-completions" ]; then
          git clone https://github.com/zsh-users/zsh-completions "~/.oh-my-zsh/custom/plugins/zsh-completions"
        fi
      register: zsh_completions

    - name: Log zsh-completions installation status
      debug:
        msg: "zsh-completions plugin installed: {{ zsh_completions.changed }}"

    - name: Install zsh-syntax-highlighting plugin using shell with if check
      shell: |
        if [ ! -d "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting" ]; then
          git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
        fi
      register: zsh_syntax_highlighting

    - name: Log zsh-syntax-highlighting installation status
      debug:
        msg: "zsh-syntax-highlighting plugin installed: {{ zsh_syntax_highlighting.changed }}"

    - name: Install stow using yay
      become: no
      command: yay -Sy --noconfirm stow
      register: stow_install
    - name: Log stow installation status
      debug:
        msg: "Stow installed: {{ stow_install.changed }}"

    - name: Remove .xinitrc file
      file:
        path: "{{ ansible_env.HOME }}/.xinitrc"
        state: absent

    - name: Remove .zshrc file
      file:
        path: "{{ ansible_env.HOME }}/.zshrc"
        state: absent

    - name: Recursively run stow on ~/dotfiles
      become: no
      shell: |
        cd ~/dotfiles && \
        for file in *; do
          stow "$file"
        done
      register: stow_run
    - name: Log stow run status
      debug:
        msg: "Dotfiles stowed: {{ stow_run.changed }}"

    - name: Change shell to Zsh using chsh
      shell: |
        chsh -s $(which zsh) {{ ansible_env.USER }}
      register: change_shell
      ignore_errors: yes  # Ignore errors if the shell is already set to Zsh

    - name: Debug output of the change shell task
      debug:
        var: change_shell
